[{"/home/mike/flatiron/projects/staged_frontend/src/actions/Index.js":"1","/home/mike/flatiron/projects/staged_frontend/src/containers/Dashboard.js":"2","/home/mike/flatiron/projects/staged_frontend/src/containers/ManageBand.js":"3","/home/mike/flatiron/projects/staged_frontend/src/actions/Auth.js":"4","/home/mike/flatiron/projects/staged_frontend/src/reducers/manageManagedBand.js":"5","/home/mike/flatiron/projects/staged_frontend/src/components/EventForm.js":"6","/home/mike/flatiron/projects/staged_frontend/src/actions/Events.js":"7"},{"size":1423,"mtime":1607969008140,"results":"8","hashOfConfig":"9"},{"size":1922,"mtime":1608316231773,"results":"10","hashOfConfig":"9"},{"size":1613,"mtime":1608313582891,"results":"11","hashOfConfig":"9"},{"size":2889,"mtime":1608329136387,"results":"12","hashOfConfig":"9"},{"size":1154,"mtime":1608315006452,"results":"13","hashOfConfig":"9"},{"size":3223,"mtime":1608314979140,"results":"14","hashOfConfig":"9"},{"size":3103,"mtime":1608317052360,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u2rc3i",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mike/flatiron/projects/staged_frontend/src/actions/Index.js",[],"/home/mike/flatiron/projects/staged_frontend/src/containers/Dashboard.js",[],"/home/mike/flatiron/projects/staged_frontend/src/containers/ManageBand.js",["31","32","33"],"/home/mike/flatiron/projects/staged_frontend/src/actions/Auth.js",[],"/home/mike/flatiron/projects/staged_frontend/src/reducers/manageManagedBand.js",[],"/home/mike/flatiron/projects/staged_frontend/src/components/EventForm.js",["34"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { clearBandErrors } from '../actions/Bands'\nimport { newEvent, editEvent } from '../actions/Events'\nimport { useHistory } from \"react-router\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst BandPost = (props) => {\n\n  const [formData, setFormData] = useState({})\n\n  const { errors, clearBandErrors, editedEvent, managedBand } = props\n\n  const date = editedEvent.id ? editedEvent.date.split(\"T\")[0] : null\n  const managedBandEventIds = managedBand.id? managedBand.events.map(e => e.id) : null\n\n  const history = useHistory()\n  const location = history.location.pathname\n\n  useEffect(() => {\n      if(errors){\n      setTimeout( () => clearBandErrors(), 3000)\n      }\n  }, [errors, clearBandErrors])\n\n  useEffect(() => {\n    // set form data on edited event\n    if(!managedBandEventIds){\n      return\n    }\n    if (managedBandEventIds.includes(editedEvent.id)){\n      setFormData ({\n        event_type: editedEvent.event_type,\n        name: editedEvent.name,\n        url: editedEvent.url,\n        date: date,\n        id: editedEvent.id\n      })\n    }\n  }, [location, editedEvent, date])\n  \n  const handleSubmit = (e) => {\n      e.preventDefault();\n      let event = {...formData, band_id: managedBand.id}\n      editedEvent.id ? props.editEvent(event) : props.newEvent(event)\n    setFormData({event_type:\"music\", name:\"\", url:\"\", date:\"\"})\n    }\n  \n  const handleChange = (e) => {\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n      });\n    }\n\n  return(\n         \n    <Container fluid>                  \n        <Form onSubmit={handleSubmit}>\n        {props.errors ? <h3>{props.errors}</h3> : null}\n        <Form.Row>\n            <Form.Group>                \n                    {editedEvent.id ?\n                        <Form.Label  as={Row}>Edit Post</Form.Label>\n                        :\n                        <Form.Label as={Row}>Post an Event</Form.Label>\n                    } \n                <Form.Control as=\"select\" name=\"event_type\" onChange={handleChange} value={formData.event_type}>\n                  <option>Music</option>\n                  <option>Show</option>\n                  <option>Merch</option>\n                </Form.Control>\n\n                <Form.Control placeholder='Event Name' name=\"name\" onChange={handleChange} value={formData.name} maxLength={50} />                \n\n                <Form.Control placeholder='Event URL' type=\"text\" name=\"url\" onChange={handleChange} value={formData.url}/>\n                \n                <Form.Control type=\"date\" name=\"date\" onChange={handleChange} value={formData.date}/>\n\n                <Button type=\"submit\">Submit</Button>\n\n            </Form.Group>\n        </Form.Row>\n        </Form>\n    </Container>\n  )\n}\n \nconst readAccess = (state) => {\n  return {\n      loading: state.loading,\n      errors: state.errors.user,\n      editedEvent: state.editedEvent,\n      managedBand: state.managedBand\n  }\n}\n\nexport default connect(readAccess, { clearBandErrors, newEvent, editEvent })(BandPost);","/home/mike/flatiron/projects/staged_frontend/src/actions/Events.js",[],{"ruleId":"35","severity":1,"message":"36","line":5,"column":17,"nodeType":"37","messageId":"38","endLine":5,"endColumn":26},{"ruleId":"35","severity":1,"message":"39","line":19,"column":11,"nodeType":"37","messageId":"38","endLine":19,"endColumn":19},{"ruleId":"35","severity":1,"message":"40","line":27,"column":26,"nodeType":"37","messageId":"38","endLine":27,"endColumn":42},{"ruleId":"41","severity":1,"message":"42","line":43,"column":6,"nodeType":"43","endLine":43,"endColumn":35,"suggestions":"44"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'rePopManagedBand' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'managedBandEventIds'. Either include it or remove the dependency array.","ArrayExpression",["45"],{"desc":"46","fix":"47"},"Update the dependencies array to be: [location, editedEvent, date, managedBandEventIds]",{"range":"48","text":"49"},[1281,1310],"[location, editedEvent, date, managedBandEventIds]"]